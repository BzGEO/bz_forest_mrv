// Display mosaics of Copernicus Sentinel-2 (S2) data for specific dates in 2024
// Additional info on S2: https://developers.google.com/earth-engine/datasets/catalog/COPERNICUS_S2_SR_HARMONIZED
// Questions? Contact eac0021@uah.edu or emil.cherrington@nasa.gov
// Last updated: 2 August 2024

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Load requisite packages
var a = require('users/bzgeo/examples:_ancillary/mes'); // Loads various ancillary datasets
var b = require('users/servirbz/packages:img_optical_landsat_mosaic_bz'); // Loads code for extracting S2 data

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Creates a 'dictionary' of dates for available S2 images. The dates below do NOT include all S2 acquisitions.
// Dates are taken from: https://docs.google.com/spreadsheets/d/1HpzpIDfCCmx7yQ-6-ZDOPCnp2YO4mfh-R5gdzxnUdRw

var dx = {"dat":[
'2024-01-09', // 0
'2024-03-09',
'2024-05-03',
'2024-05-18', // 3
'2024-05-23',
'2024-05-28',
'2024-06-02',
'2024-06-07',
'2024-06-12',
'2024-06-17',
'2024-06-22',
'2024-06-27', // 11
'2024-07-02', // 12
'2024-07-07', // 13
'2024-07-12', // 14
'2024-07-17', // 15
'2024-07-22', // 16
'2024-07-27', // 17
'2024-08-01', // 18
//'2024-08-06', // 19
//'2024-08-11', // 20
//'2024-08-16', // 21
//'2024-08-21', // 22
//'2024-08-26', // 23
//'2024-08-31', // 24
]};

dx = dx.dat;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Add data to map viewer below
Map.setCenter(-88.7157, 17.245, 9); // focus on Belize, at zoom level 9

// Add Sentinel-2 data based on the 2024 dates defined above
Map.addLayer(b.s2_bz(dx[0]), b.viz_s2_543, dx[0]+'_S2_BOA_false_color', 0);
//Map.addLayer(b.s2_bz(dx[0]), {bands: ['B4'], min: 1800, max: 3800}, dx[0]+'_S2_BOA_false_color_NIR', 0);
Map.addLayer(b.s2_bz(dx[1]), b.viz_s2_543, dx[1]+'_S2_BOA_false_color', 0);
Map.addLayer(b.s2_bz(dx[2]), b.viz_s2_543, dx[2]+'_S2_BOA_false_color', 0);
Map.addLayer(b.s2_bz(dx[3]), b.viz_s2_543, dx[3]+'_S2_BOA_false_color', 0);
//Map.addLayer(b.s2_bz(dx[3]), {bands: ['B4'], min: 1800, max: 3800}, dx[3]+'_S2_BOA_false_color_NIR', 0);
Map.addLayer(b.s2_bz(dx[4]), b.viz_s2_543, dx[4]+'_S2_BOA_false_color', 0);
Map.addLayer(b.s2_bz(dx[5]), b.viz_s2_543, dx[5]+'_S2_BOA_false_color', 0);
Map.addLayer(b.s2_bz(dx[6]), b.viz_s2_543, dx[6]+'_S2_BOA_false_color', 0);
Map.addLayer(b.s2_bz(dx[7]), b.viz_s2_543, dx[7]+'_S2_BOA_false_color', 0);
Map.addLayer(b.s2_bz(dx[8]), b.viz_s2_543, dx[8]+'_S2_BOA_false_color', 0);
Map.addLayer(b.s2_bz(dx[9]), b.viz_s2_543, dx[9]+'_S2_BOA_false_color', 0);
Map.addLayer(b.s2_bz(dx[10]), b.viz_s2_543, dx[10]+'_S2_BOA_false_color', 0);
Map.addLayer(b.s2_bz(dx[11]), b.viz_s2_543, dx[11]+'_S2_BOA_false_color', 0);
//Map.addLayer(b.s2_bz(dx[11]), {bands: ['B4'], min: 1800, max: 3800}, dx[11]+'_S2_BOA_false_color_NIR', 0);
Map.addLayer(b.s2_bz(dx[12]), b.viz_s2_543, dx[12]+'_S2_BOA_false_color', 0);
Map.addLayer(b.s2_bz(dx[13]), b.viz_s2_543, dx[13]+'_S2_BOA_false_color', 0);
Map.addLayer(b.s2_bz(dx[14]), b.viz_s2_543, dx[14]+'_S2_BOA_false_color', 0);
Map.addLayer(b.s2_bz(dx[15]), b.viz_s2_543, dx[15]+'_S2_BOA_false_color', 0);
Map.addLayer(b.s2_bz(dx[16]), b.viz_s2_543, dx[16]+'_S2_BOA_false_color', 0);
Map.addLayer(b.s2_bz(dx[17]), b.viz_s2_543, dx[17]+'_S2_BOA_false_color', 0);
Map.addLayer(b.s2_bz(dx[18]), b.viz_s2_543, dx[18]+'_S2_BOA_false_color', 1);

//Map.addLayer(b.s2_bz(dx[19]), b.viz_s2_543, dx[19]+'_S2_BOA_false_color', 1);
//Map.addLayer(b.s2_bz(dx[20]), b.viz_s2_543, dx[20]+'_S2_BOA_false_color', 1);
//Map.addLayer(b.s2_bz(dx[21]), b.viz_s2_543, dx[21]+'_S2_BOA_false_color', 1);
//Map.addLayer(b.s2_bz(dx[22]), b.viz_s2_543, dx[22]+'_S2_BOA_false_color', 1);
//Map.addLayer(b.s2_bz(dx[23]), b.viz_s2_543, dx[23]+'_S2_BOA_false_color', 1);
//Map.addLayer(b.s2_bz(dx[24]), b.viz_s2_543, dx[24]+'_S2_BOA_false_color', 1);

// Add ancillary reference datasets
Map.addLayer(a.bz_ws_ln.clip(a.roi_bz),{palette: "blue"},"Watersheds (mainland)", false);
Map.addLayer(a.bz_dist_ln2.clip(a.roi_bz),{palette: "white"},"District boundaries", false);
Map.addLayer(a.pa_bz_ln.clip(a.roi_bz),{palette: "yellow"},"Prot. areas", true);
Map.addLayer(a.bnds_intl_ln2.clip(a.roi_bz),{palette: "white"},"Int'l boundaries", true);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////