// Burn scar mapping script: 2019, 2020, 2021
// Last updated: 15 Sept. 2022

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var roi = ee.Geometry.Rectangle(-87.70, 15.73, -89.30, 18.60);
var roi2 = ee.FeatureCollection("users/servirbz/aoi/lac/cam/bz/bz_bounds_swbd"); // Belize polygon boundaries

var t = 'system:time_start';

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var fro_s2 = ['B2','B3','B4','B8','B11','B12','QA60','SCL','MSK_CLDPRB']; // S2 bands: blue, green, red, NIR, SWIR1, SWIR2, QA
var to = ['B1','B2','B3','B4','B5','B7','QA60','SCL','MSK_CLDPRB']; // renames S2 bands to familiar Landsat-7 nomenclature
var s2 = ee.ImageCollection('COPERNICUS/S2_SR').select(fro_s2,to); // Sentinel-2 surface reflectance data

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Mask clouds using the method Rogier Westerhoff (code shared on 18 July 2019) | src:
// https://code.earthengine.google.com/5efd72f8fac413ac45bfb29079bd7e53

var mskS2 = function(img){
  var cloudProb = img.select('MSK_CLDPRB');
  var scl = img.select('SCL'); // 3 = cloud shadow
  var shadow = scl.eq(3);
  var mask = cloudProb.lt(5).or(shadow).eq(1);
  return img.updateMask(mask).select(['B1','B2','B3','B4','B5','B7']);};

// Normalized Burn Ratio (NBR) | Background reading:
// http://un-spider.org/advisory-support/recommended-practices/recommended-practice-burn-severity/in-detail/normalized-burn-ratio

function nbr(img) {return img.normalizedDifference(["B4","B7"]).select(['nd'],['nbr'])}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var coll_s2_orig = s2.filterBounds(roi)
              .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 20))
              //.filterDate('2019-01-01','2019-12-31')
              .sort(t, false)
              .map(function(image){var dateStr = ee.Date(image.get('system:time_start')).format();
              return image.clip(roi).clip(roi2).set('date',dateStr);});

//print(coll_s2_orig);


var coll_s2_flt_2019 = coll_s2_orig.filterDate('2019-01-01','2019-05-31').map(mskS2).map(nbr);
var coll_s2_flt_2020 = coll_s2_orig.filterDate('2020-01-01','2020-05-31').map(mskS2).map(nbr);
var coll_s2_flt_2021 = coll_s2_orig.filterDate('2021-01-01','2021-05-31').map(mskS2).map(nbr);

//print(coll_s2_flt_2019);

var s2_2019_max = coll_s2_flt_2019.max();
var s2_2020_max = coll_s2_flt_2020.max();
var s2_2021_max = coll_s2_flt_2021.max();
//print(s2_2019_max);

var s2_2019_med = coll_s2_flt_2019.median();
var s2_2020_med = coll_s2_flt_2020.median();
var s2_2021_med = coll_s2_flt_2021.median();

var s2_2019_min = coll_s2_flt_2019.min();
var s2_2020_min = coll_s2_flt_2020.min();
var s2_2021_min = coll_s2_flt_2021.min();

var s2_2020_dnbr1 = s2_2020_max.subtract(s2_2020_min).clip(roi2);
var s2_2020_dnbr2 = s2_2020_med.subtract(s2_2020_min).clip(roi2);

var s2_2020_dnbr1_ = s2_2020_dnbr1.mask(s2_2020_dnbr1.gte(0.66));
var s2_2020_dnbr2_ = s2_2020_dnbr2.mask(s2_2020_dnbr2.gte(0.66));

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var pal_dnbr = {min: -0.5, max: 1.3, palette: ['red','orange','silver','yellow','lime','limegreen']}; // DNBR palette (1)

var pal_dnbr0 = {min: -0.5, max: 1.3, palette: ['limegreen','lime','silver','yellow','orange','red','purple']}; // DNBR palette (1)
var pal_dnbr2 = {min: 0.2, max: 1.3, palette: ['red']}; // DNBR palette (2)
var pal_dnbr3 = {min: 0.1, max: 1.3, palette: ['orange']}; // DNBR palette (3)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Map.addLayer(s2_2019_max, pal_dnbr, 'NBR_S2_2019_max', false);
Map.addLayer(s2_2020_max, pal_dnbr, 'NBR_S2_2020_max', false);
Map.addLayer(s2_2021_max, pal_dnbr, 'NBR_S2_2021_max', false);

Map.addLayer(s2_2019_min, pal_dnbr, 'NBR_S2_2019_min', false);
Map.addLayer(s2_2020_min, pal_dnbr, 'NBR_S2_2020_min', false);
Map.addLayer(s2_2021_min, pal_dnbr, 'NBR_S2_2021_min', false);

Map.addLayer(s2_2020_dnbr1, pal_dnbr0, 'dNBR_1_S2_2020', false);
Map.addLayer(s2_2020_dnbr2, pal_dnbr0, 'dNBR_2_S2_2020', false);

Map.addLayer(s2_2020_dnbr1_, pal_dnbr2, 'dNBR_1_S2_2020_', true);
Map.addLayer(s2_2020_dnbr2_, pal_dnbr2, 'dNBR_2_S2_2020_', false);

Map.addLayer(roi, {palette: ['red']},'AOI', false);

Map.setOptions('SATELLITE');
Map.centerObject(roi, 9);

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////