/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var mfc = ee.FeatureCollection("projects/bz-sdg/aoi/bz_mfc");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Script for looking at burn scars using data from Landsat, Planet, Sentinel-2
// NOTE: This version renumbers the Landsat-8 and Landsat-9 bands.
// Last updated: 11.07.2024

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Loads classification + spectral unmixing scripts
var a = require('users/servirbz/packages:sma_std3');

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Function that turns a polygon into line boundaries
function ln(feature){return ee.Image().byte().paint({featureCollection:feature,width:2})}

// Function for extracting Landsat-8 (L8) and Landsat-9 (L9) images for Belize MFC based on dates
function landsat(date) {return ee.ImageCollection("LANDSAT/LC08/C02/T1_L2").merge(ee.ImageCollection("LANDSAT/LC09/C02/T1_L2"))
    .filterDate(ee.Date(date), ee.Date(date).advance(1, 'day'))
    .filter(ee.Filter.inList('WRS_PATH', [19])).filter(ee.Filter.inList('WRS_ROW', [47,48,49]))
    .map(function(img){var qa = img.select('QA_PIXEL');
                              var mask = qa.bitwiseAnd(1 << 3).eq(0);
                              return img.updateMask(mask);})
    .median().select('SR_B.').multiply(0.0000275).add(-0.2).multiply(10000)
    .select(['SR_B2','SR_B3','SR_B4','SR_B5','SR_B6','SR_B7'],['B1','B2','B3','B4','B5','B7']).toUint16().clip(mfc);}

// Function for performing unsupervised classification using K-means
function unsuper(img, no) {
return img.cluster(ee.Clusterer.wekaKMeans(no).train(img.sample({region:mfc,scale:30,numPixels:3000}))).clip(mfc);}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Function for deriving NDVI from Landsat data (using NIR, blue bands)
function ndvi_lt(img) {return img.normalizedDifference(['B4','B3']).rename('NDVI');}

// Function for deriving Normalized Burn Ratio (NBR) from Landsat data (using NIR and SWIR2 bands)
// also see NBR formulation in: https://code.earthengine.google.com/?scriptPath=users%2Femaprlab%2Fpublic%3AModules%2FLandTrendr.js
function nbr_lt(img) {return img.normalizedDifference(['B4','B7']).rename('NBR');}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var dates = {"dat":[
  '2023-06-08', // 0
  '2024-02-11', // 1
  '2024-03-22', // 2
  '2024-05-17', // 3
  '2024-06-10', // 4
  ]};

var dat = dates.dat;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//Extraction of NDVI from L8 and L9 data
var lt_20240322_L9_ndvi = ndvi_lt(lt_20240322_L9),
    lt_20240610_L9_ndvi = ndvi_lt(lt_20240610_L9);
    
// Extraction of NBR from L8 and L9 data
var lt_20240322_L9_nbr = nbr_lt(lt_20240322_L9),
    lt_20240610_L9_nbr = nbr_lt(lt_20240610_L9);


// Landsat
// NDVI differencing: Mar. vs. June 2024
var lt_ndvi_diff_202403_202406 = lt_20240610_L9_ndvi.subtract(lt_20240322_L9_ndvi).multiply(ee.Number(100));

// Differenced NBR: Mar. vs. June 2024
var lt_dnbr_202403_202406 = lt_20240610_L9_nbr.subtract(lt_20240322_L9_nbr).multiply(ee.Number(-100));

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Visualization parameters

var viz_lt_543 = {bands: ['B5', 'B4', 'B3'], min: [730, 1800, -740], max:[2200, 3800, 2000]};

var pal_ndvi_lt = {min:0.2,max:1.0,palette:['red','yellow','green']};
var pal_nbr_lt = {min:-0.1,max:0.5,palette:['darkred','lightyellow','olive']};

var pal_ndvi_diff = {min:-30,max:30,palette:['darkred','red','lightyellow','green','limegreen']};
var pal_ndvi_diff_lt = {min:-34,max:10,palette:['darkred','red','lightyellow','green','limegreen']};
var pal_dnbr = {min: -7, max: 34, palette: ['limegreen','lime','silver','yellow','orange','red','purple']};

var pal_ndvi_for_lt = {min: 0.51, max: 1.0, palette: ['green']};

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Visualize data in map viewer
Map.setCenter(-88.5118, 17.3651, 12);

Map.addLayer(landsat(dat[0]), viz_lt_543,'Landsat '+dat[0], 0);
Map.addLayer(landsat(dat[1]), viz_lt_543,'Landsat '+dat[1], 0);
Map.addLayer(landsat(dat[2]), viz_lt_543,'Landsat '+dat[2], 0);
Map.addLayer(landsat(dat[3]), viz_lt_543,'Landsat '+dat[3], 1);
Map.addLayer(landsat(dat[4]), viz_lt_543,'Landsat '+dat[4], 0);

Map.addLayer(a.for_sma_60(a.sma_(landsat(dat[2]))), a.pal_fc,'Forest cover '+dat[2], 0);
Map.addLayer(a.for_sma_60(a.sma_(landsat(dat[3]))), a.pal_fc,'Forest cover '+dat[3], 0);

Map.addLayer(unsuper(landsat(dat[2]),3).randomVisualizer(), {},'Unsupervised classif '+dat[2], 0);
Map.addLayer(unsuper(landsat(dat[3]),3).randomVisualizer(), {},'Unsupervised classif '+dat[3], 0);

//Map.addLayer(lt_20240322_L9_ndvi, pal_ndvi_lt, 'Landsat-9_2024-03-22_NDVI', false);
//Map.addLayer(lt_20240610_L9_ndvi, pal_ndvi_lt, 'Landsat-9_2024-06-10_NDVI', false);
//Map.addLayer(lt_ndvi_diff_202301_202306, pal_ndvi_diff_lt, 'Landsat_NDVI_diff_202301_202306', false);

Map.addLayer(ln(mfc), {palette: ['red']}, 'MFC boundaries', 1);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Export Landsat imagery to Google Drive
/*
Export.image.toDrive ({image:lt_20240322_L9, description:'export_LT_2024-03', scale: 30,
    region: mfc, maxPixels: 1e12});

Export.image.toDrive ({image:lt_20240610_L9, description:'export_LT_2024-06', scale: 30,
    region: mfc, maxPixels: 1e12});
*/

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////