/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var lc_2018 = ee.Image("users/servirbz/compil_ecosys/terrestrial/bz_lc_cathalac_2018_10m");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Displays 2018 Land Cover data generated by CATHALAC for the Belize Forest Dept.
// More info: https://drive.google.com/file/d/11BU68MlhLL3xcrRf-gLAKNec2kLbx985
// src: https://code.earthengine.google.com/?scriptPath=users%2Fbzgeo%2Fbz_lcc%3A2b_classif_2015_2020%2Fbz_natl_2018_01_viz
// Questions? Contact eac0021@uah.edu or emil.cherrington@nasa.gov
// Last updated: 14.08.2024

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Load requisite packages
var a = require('users/servirbz/packages:img_optical_landsat_mosaic_bz'); // Loads code for extracting S2 data
var b = require('users/bzgeo/examples:_ancillary/mes'); // Loads various ancillary datasets

// Load region of interest (ROI) data -> Belize boundaries
var roi = ee.FeatureCollection("users/servirbz/aoi/lac/cam/bz/bz_bounds_swbd00"); // Belize shapefile ROI

// Define date to be used to pull Sentinel-2 imagery below
var date = "2019-04-20";

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// 22 class palette for the land cover data
var pal22cl = {min: 1, max: 22, palette: [
  'forestgreen', // 1: Forest, broadleaf (mature)
  'lime', // 2: Forest, broadleaf (secondary)
  'chartreuse', // 3: Forest, regenerating -> how is this different from 2?
  'green', // 4: Forest, needleleaf
  'limegreen', // 5: Forest, needleleaf (regenerating)
  'teal', // 6: Forest, mangrove
  'yellowgreen', // 7: Forest, plantations
  'olive', // 8: Fern thickets -> 3
  'orange', // 9: Shrubland -> 3
  'darkorange', // 10: Regenerating secondary broadleaf (?) -> 3
  'fuchsia', // 11: Lowland savanna -> 3
  'sandybrown', // 12: Agriculture, citrus -> 2
  'sandybrown', // 13: Agriculture, fallow-> 2
  'sandybrown', // 14: Agriculture, intensive -> 2
  'yellow', // 15: Agriculture, pasture -> 2
  'sandybrown', // 16: Agriculture, sugarcane -> 2
  'springgreen', // 17: Agriculture, swidden (milpa) -> 2
  'navy', // 18: Aquaculture -> 4
  'slategray', // 19: Bare soil -> 6
  'red', // 20: Settlements -> 5
  'aqua', // 21: Wetland -> 4
  'blue' // 22: Water -> 4
]};

// Reclassify land cover to forest cover (6 IPCC classes: forest [1], cropland [2], grassland [3], wetland [4], settlements [5], other lands [6])
var lc6_2018 = lc_2018.remap([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],
                             [1,1,1,1,1,1,1,3,3,3,3,2,2,2,2,2,2,4,6,5,4,4])
              .select(['remapped'],['lc']);

// Reclassify land cover to forest cover (3 classes: water [0], forest [1], non-forest [2])
var fc_2018 = lc_2018.remap([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],
                     [1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,0,2,2,0,0])
              .select(['remapped'],['fcover']);

// 3 class palette based on the reclassification
var pal3cl = {min: 0, max: 2, palette: ['lightskyblue','green','salmon']};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Estimate forest area and % forest cover

function fstat(img,res,aoi,year) {

// Extract area for use in % forest cover calculations below
var area_bz = ee.Number(ee.FeatureCollection(roi).geometry().area().divide(1000000)); // Area of Belize = 22,230 km2

// Extract forest area
var f_stat = ee.Number(img.clip(aoi).select('fcover').eq(1).multiply(ee.Image.pixelArea()).reduceRegion({
  geometry: aoi.geometry(), reducer: ee.Reducer.sum(), scale: res, maxPixels: 1e18}).get('fcover')).divide(1000000);

// Extract non-forest area
var nf_stat = ee.Number(img.clip(aoi).select('fcover').neq(1).multiply(ee.Image.pixelArea()).reduceRegion({
  geometry: aoi.geometry(), reducer: ee.Reducer.sum(), scale: res, maxPixels: 1e18}).get('fcover')).divide(1000000);

// Select which statistics are printed out
print('Year: ', year);
print('est. forest area: ', f_stat, 'sq. km');
print('est. % forest cover: ', f_stat.divide(area_bz).multiply(100),'percent');
//print('est. % non-forest cover: ', nf_stat.divide(roi).multiply(100),'percent');
}

/////

print("Land Cover (CATHALAC) - 10m");

// Apply function to estaimate forest cover (but at 100m spatial resolution)
fstat(fc_2018.reproject({crs: 'EPSG: 32616',scale: 10}), 10, roi, 2018);

print("Land Cover (CATHALAC) - 100m");

// Apply function to estaimate forest cover (but at 100m spatial resolution)
fstat(fc_2018.reproject({crs: 'EPSG: 32616',scale: 100})
                   .reduceResolution({reducer: ee.Reducer.median(), maxPixels:10000, bestEffort: true}),
                   100, roi, 2018);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Add data to map viewer below
Map.setOptions('SATELLITE');
Map.setCenter(-88.7164, 17.1775, 9);

// Load reference Sentinel-2 data
Map.addLayer(a.s2_bz(date), a.viz_s2_543, date+'_S2_BOA_false_color', 0);

// Load 2018 land cover map
Map.addLayer(fc_2018, pal3cl, 'BZ_FC_CATHALAC_2018', 0);
Map.addLayer(lc_2018, pal22cl, 'BZ_LC_CATHALAC_2018', 1);

// Load ancillary reference datasets
Map.addLayer(b.bz_ws_ln.clip(b.roi_bz_),{palette: "blue"},"Watersheds (mainland)", 0);
Map.addLayer(b.bz_dist_ln2.clip(b.roi_bz),{palette: "white"},"District boundaries", 0);
Map.addLayer(b.pa_bz_ln.clip(b.roi_bz),{palette: "black"},"Prot. areas", 1);
Map.addLayer(b.bnds_intl_ln2.clip(b.roi_bz),{palette: "white"},"Int'l boundaries", 1);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////