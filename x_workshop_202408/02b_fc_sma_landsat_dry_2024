// Extract forest cover data for Belize for 2024 using Spectral Mixture Analysis (SMA)
// Orig.: https://code.earthengine.google.com/?scriptPath=users%2Fbzgeo%2Fbz_lcc%3A2d_classif_2023%2F_ui%2Fbz_l9_07_20240521
// Questions? Contact eac0021@uah.edu or emil.cherrington@nasa.gov
// Last updated: 31.07.2024

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Load requisite packages
var a = require('users/bzgeo/examples:_ancillary/mes'); // Loads various ancillary datasets
var b = require('users/servirbz/packages:sma_std3'); // Loads functions for classifying imagery based on SMA

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Define regions of interest (ROIs) -> interchangeable w/ areas of interest (AOIs)
var roi = ee.Geometry.Polygon([[[-87.68, 19.289437],[-87.68, 15.585054],[-89.991352, 15.585054],[-89.991352, 19.289437]]]); // BZ bounding box ROI
var roi2 = ee.FeatureCollection("users/servirbz/aoi/lac/cam/bz/bz_bounds_swbd00"); // Belize shapefile ROI

// Load Landsat image collections
var coll_l8 = ee.ImageCollection('LANDSAT/LC08/C02/T1_L2').filterDate("2024-01-01","2024-05-31");
var coll_l9 = ee.ImageCollection('LANDSAT/LC09/C02/T1_L2').filterDate("2024-01-01","2024-05-31");
var coll_l8_l9 = coll_l8.merge(coll_l9); // merges the Landsat-8 and Landsat-9 data into a single collection

print(coll_l8_l9.filterBounds(roi2)); // Prints a list of all of the Landsat-8 and -9 scenes in the domain + timeframe

// Extract a Landsat-8 mosaic of Belize from 17 May 2024
var l8_20240517 = ee.ImageCollection('LANDSAT/LC08/C02/T1_L2').filterDate("2024-05-17T00:00","2024-05-17T23:59");

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Functions: Cloud mask and scale factors
function applyScaleFactors(image) {
  var qaMask = image.select('QA_PIXEL').bitwiseAnd(parseInt('11111', 2)).eq(0);
  var saturationMask = image.select('QA_RADSAT').eq(0);
  var opticalBands = image.select('SR_B.').multiply(0.0000275).add(-0.2).multiply(10000);
  var thermalBands = image.select('ST_B.*').multiply(0.00341802).add(149.0);
  return image.addBands(opticalBands, null, true).addBands(thermalBands, null, true)
              .updateMask(qaMask).updateMask(saturationMask).toInt16()
              .select(['SR_B2','SR_B3','SR_B4','SR_B5','SR_B6','SR_B7'],['B1','B2','B3','B4','B5','B7']);}

// Applies functions
var l8_2024 = coll_l8.map(applyScaleFactors).median().clip(roi);
var l9_2024 = coll_l9.map(applyScaleFactors).median().clip(roi);
var l8_l9_2024 = coll_l8_l9.map(applyScaleFactors).median().clip(roi);

// Apply functions to extract out the single image indicated above (~lines 25-26)
l8_20240517 = l8_20240517.map(applyScaleFactors).median().clip(roi);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Estimate forest area and % forest cover

// Define function for extracting forest cover statistics and printing those statistics in the Console on the right ->

function fstat(img,res,aoi,year) {
// NOTE: For this function to work, we need to supply the forest cover map, the spatial resolution, AOI, and the analysis year.

// Extract area for use in % forest cover calculations below
var area_bz = ee.Number(ee.FeatureCollection(roi2).geometry().area().divide(1000000)); // Area of Belize = 22,230 km2

// Extract forest area
var f_stat = ee.Number(img.clip(aoi).select('constant').eq(1).multiply(ee.Image.pixelArea()).reduceRegion({
  geometry: aoi.geometry(), reducer: ee.Reducer.sum(), scale: res, maxPixels: 1e18}).get('constant')).divide(1000000);

// Extract non-forest area
var nf_stat = ee.Number(img.clip(aoi).select('constant').eq(0).multiply(ee.Image.pixelArea()).reduceRegion({
  geometry: aoi.geometry(), reducer: ee.Reducer.sum(), scale: res, maxPixels: 1e18}).get('constant')).divide(1000000);

// Select which statistics are printed out
print('Year: ', year); // This prints the analysis year (defined by the operator)
print('est. forest area: ', f_stat, 'sq. km'); // This prints the forest cover extent in square kilometers
print('est. % forest cover: ', f_stat.divide(area_bz).multiply(100),'percent'); // This prints the forest cover extent in percent
//print('est. % non-forest cover: ', nf_stat.divide(roi).multiply(100),'percent'); // This prints the non-forest cover extent in percent
}

// Extract forest cover statistics using previously defined function

fstat(b.for_sma_60(b.sma_(l8_l9_2024)).reproject({crs: 'EPSG: 32616', scale: 100})
                   .reduceResolution({reducer: ee.Reducer.mode(), maxPixels: 10000, bestEffort: true}),
                   100, roi2, 2024);

/* PLEASE NOTE that in this example, we are using a 60% photosynthetic vegetation threshold to estimate forest cover.
However, we can adjust the threshold up or down, e.g. with b.for_sma_50 or b.for_sma_70.
This is based on the following package that this script is referencing:

https://code.earthengine.google.com/?scriptPath=users%2Fservirbz%2Fpackages%3Asma_std3
*/

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Define parameters for visualizing the data in the map viewer below

// Landsat visualization palettes

// var viz_543 = {bands: ['B5','B4','B3'],min: 0, max: 4500}; // This is a simple visualization palette
var viz_543 = {bands: ['B5','B4','B3'], min: [730, 1800, -740], max:[2200, 3800, 2000]}; // This palette applies a nice histogram stretch

// Forest cover palette (two colors)
var pal_fc = {min:0,max:1,palette:['salmon','green']};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Add data to map viewer
Map.setCenter(-88.1433, 17.3638, 9); // Centers the data on Belize, at zoom level 9

// Load Landsat-8 data from 17 May 2024
Map.addLayer(l8_20240517, viz_543, 'L8_2024-05-17', false);
Map.addLayer(b.sma_(l8_20240517), {}, "L8_2024-05-17_SMA", false);
Map.addLayer(b.for_sma_60(b.sma_(l8_20240517)), pal_fc, "L8_2024-05-17_SMA_FC_60%", false);

// Load Landsat-8 only data
Map.addLayer(l8_2024, viz_543, 'L8_mosaic_2024', false);
Map.addLayer(b.sma_(l8_2024), {}, 'L8_mosaic_2024_SMA', false);
Map.addLayer(b.for_sma_60(b.sma_(l8_2024)), pal_fc, 'L8_mosaic_2024_SMA_FC_60%', false);

// Load Landsat-9 only data
Map.addLayer(l9_2024, viz_543, 'L9_mosaic_2024', false);
Map.addLayer(b.sma_(l9_2024), {}, 'L9_mosaic_2024_SMA', false);
Map.addLayer(b.for_sma_60(b.sma_(l9_2024)), pal_fc, 'L9_mosaic_2024_SMA_FC_60%', false);

// Load Landsat-8 and Landsat-9 mosaic data
Map.addLayer(l8_l9_2024, viz_543, 'L8_L9_mosaic_2024', false);
Map.addLayer(b.sma_(l8_l9_2024), {}, 'L8_L9_mosaic_2024_SMA', false);
Map.addLayer(b.for_sma_60(b.sma_(l8_l9_2024)), pal_fc, 'L8_L9_mosaic_2024_SMA_FC_60%', true);

// Load ancillary reference datasets
Map.addLayer(a.bz_ws_ln.clip(roi),{palette: "blue"},"Watersheds (mainland)", false);
Map.addLayer(a.pa_bz_ln.clip(roi),{palette: "yellow"},"Prot. areas", true);
Map.addLayer(a.bnds_intl_ln2.clip(roi),{palette: "white"},"Int'l boundaries", true);

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Export data to Google Drive

/*
Export.image.toDrive({'image': l8_20240517, 'region': roi, 'scale': 30, 'description': 'export_l8_20240517',
    'folder': 'x_tmp_gee_outputs', 'fileNamePrefix': 'bz_l8_2024-05-17_030m', 'crs': 'EPSG:32616', 'maxPixels': 1e13});

*/

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////